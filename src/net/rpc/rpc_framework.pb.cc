// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc_framework.proto

#include "rpc_framework.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace wa {
namespace rpc {
PROTOBUF_CONSTEXPR FrameworkRequestHeader::FrameworkRequestHeader(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.servicename_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.methodname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.argssize_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FrameworkRequestHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FrameworkRequestHeaderDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FrameworkRequestHeaderDefaultTypeInternal() {}
  union {
    FrameworkRequestHeader _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FrameworkRequestHeaderDefaultTypeInternal _FrameworkRequestHeader_default_instance_;
PROTOBUF_CONSTEXPR FrameworkResponseHeader::FrameworkResponseHeader(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.code_)*/0u
  , /*decltype(_impl_.responsesize_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FrameworkResponseHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FrameworkResponseHeaderDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FrameworkResponseHeaderDefaultTypeInternal() {}
  union {
    FrameworkResponseHeader _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FrameworkResponseHeaderDefaultTypeInternal _FrameworkResponseHeader_default_instance_;
}  // namespace rpc
}  // namespace wa
static ::_pb::Metadata file_level_metadata_rpc_5fframework_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_rpc_5fframework_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_rpc_5fframework_2eproto = nullptr;

const uint32_t TableStruct_rpc_5fframework_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wa::rpc::FrameworkRequestHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wa::rpc::FrameworkRequestHeader, _impl_.servicename_),
  PROTOBUF_FIELD_OFFSET(::wa::rpc::FrameworkRequestHeader, _impl_.methodname_),
  PROTOBUF_FIELD_OFFSET(::wa::rpc::FrameworkRequestHeader, _impl_.argssize_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wa::rpc::FrameworkResponseHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::wa::rpc::FrameworkResponseHeader, _impl_.code_),
  PROTOBUF_FIELD_OFFSET(::wa::rpc::FrameworkResponseHeader, _impl_.responsesize_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::wa::rpc::FrameworkRequestHeader)},
  { 9, -1, -1, sizeof(::wa::rpc::FrameworkResponseHeader)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::wa::rpc::_FrameworkRequestHeader_default_instance_._instance,
  &::wa::rpc::_FrameworkResponseHeader_default_instance_._instance,
};

const char descriptor_table_protodef_rpc_5fframework_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023rpc_framework.proto\022\006wa.rpc\"S\n\026Framewo"
  "rkRequestHeader\022\023\n\013serviceName\030\001 \001(\014\022\022\n\n"
  "methodName\030\002 \001(\014\022\020\n\010argsSize\030\003 \001(\r\"=\n\027Fr"
  "ameworkResponseHeader\022\014\n\004code\030\001 \001(\r\022\024\n\014r"
  "esponseSize\030\002 \001(\rb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_rpc_5fframework_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_rpc_5fframework_2eproto = {
    false, false, 185, descriptor_table_protodef_rpc_5fframework_2eproto,
    "rpc_framework.proto",
    &descriptor_table_rpc_5fframework_2eproto_once, nullptr, 0, 2,
    schemas, file_default_instances, TableStruct_rpc_5fframework_2eproto::offsets,
    file_level_metadata_rpc_5fframework_2eproto, file_level_enum_descriptors_rpc_5fframework_2eproto,
    file_level_service_descriptors_rpc_5fframework_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_rpc_5fframework_2eproto_getter() {
  return &descriptor_table_rpc_5fframework_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_rpc_5fframework_2eproto(&descriptor_table_rpc_5fframework_2eproto);
namespace wa {
namespace rpc {

// ===================================================================

class FrameworkRequestHeader::_Internal {
 public:
};

FrameworkRequestHeader::FrameworkRequestHeader(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:wa.rpc.FrameworkRequestHeader)
}
FrameworkRequestHeader::FrameworkRequestHeader(const FrameworkRequestHeader& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FrameworkRequestHeader* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.servicename_){}
    , decltype(_impl_.methodname_){}
    , decltype(_impl_.argssize_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.servicename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.servicename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_servicename().empty()) {
    _this->_impl_.servicename_.Set(from._internal_servicename(), 
      _this->GetArenaForAllocation());
  }
  _impl_.methodname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.methodname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_methodname().empty()) {
    _this->_impl_.methodname_.Set(from._internal_methodname(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.argssize_ = from._impl_.argssize_;
  // @@protoc_insertion_point(copy_constructor:wa.rpc.FrameworkRequestHeader)
}

inline void FrameworkRequestHeader::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.servicename_){}
    , decltype(_impl_.methodname_){}
    , decltype(_impl_.argssize_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.servicename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.servicename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.methodname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.methodname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FrameworkRequestHeader::~FrameworkRequestHeader() {
  // @@protoc_insertion_point(destructor:wa.rpc.FrameworkRequestHeader)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FrameworkRequestHeader::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.servicename_.Destroy();
  _impl_.methodname_.Destroy();
}

void FrameworkRequestHeader::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FrameworkRequestHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:wa.rpc.FrameworkRequestHeader)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.servicename_.ClearToEmpty();
  _impl_.methodname_.ClearToEmpty();
  _impl_.argssize_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrameworkRequestHeader::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes serviceName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_servicename();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes methodName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_methodname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 argsSize = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.argssize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FrameworkRequestHeader::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wa.rpc.FrameworkRequestHeader)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes serviceName = 1;
  if (!this->_internal_servicename().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_servicename(), target);
  }

  // bytes methodName = 2;
  if (!this->_internal_methodname().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_methodname(), target);
  }

  // uint32 argsSize = 3;
  if (this->_internal_argssize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_argssize(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wa.rpc.FrameworkRequestHeader)
  return target;
}

size_t FrameworkRequestHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wa.rpc.FrameworkRequestHeader)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes serviceName = 1;
  if (!this->_internal_servicename().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_servicename());
  }

  // bytes methodName = 2;
  if (!this->_internal_methodname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_methodname());
  }

  // uint32 argsSize = 3;
  if (this->_internal_argssize() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_argssize());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FrameworkRequestHeader::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FrameworkRequestHeader::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FrameworkRequestHeader::GetClassData() const { return &_class_data_; }


void FrameworkRequestHeader::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FrameworkRequestHeader*>(&to_msg);
  auto& from = static_cast<const FrameworkRequestHeader&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:wa.rpc.FrameworkRequestHeader)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_servicename().empty()) {
    _this->_internal_set_servicename(from._internal_servicename());
  }
  if (!from._internal_methodname().empty()) {
    _this->_internal_set_methodname(from._internal_methodname());
  }
  if (from._internal_argssize() != 0) {
    _this->_internal_set_argssize(from._internal_argssize());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FrameworkRequestHeader::CopyFrom(const FrameworkRequestHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wa.rpc.FrameworkRequestHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrameworkRequestHeader::IsInitialized() const {
  return true;
}

void FrameworkRequestHeader::InternalSwap(FrameworkRequestHeader* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.servicename_, lhs_arena,
      &other->_impl_.servicename_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.methodname_, lhs_arena,
      &other->_impl_.methodname_, rhs_arena
  );
  swap(_impl_.argssize_, other->_impl_.argssize_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FrameworkRequestHeader::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rpc_5fframework_2eproto_getter, &descriptor_table_rpc_5fframework_2eproto_once,
      file_level_metadata_rpc_5fframework_2eproto[0]);
}

// ===================================================================

class FrameworkResponseHeader::_Internal {
 public:
};

FrameworkResponseHeader::FrameworkResponseHeader(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:wa.rpc.FrameworkResponseHeader)
}
FrameworkResponseHeader::FrameworkResponseHeader(const FrameworkResponseHeader& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FrameworkResponseHeader* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.code_){}
    , decltype(_impl_.responsesize_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.code_, &from._impl_.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.responsesize_) -
    reinterpret_cast<char*>(&_impl_.code_)) + sizeof(_impl_.responsesize_));
  // @@protoc_insertion_point(copy_constructor:wa.rpc.FrameworkResponseHeader)
}

inline void FrameworkResponseHeader::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.code_){0u}
    , decltype(_impl_.responsesize_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FrameworkResponseHeader::~FrameworkResponseHeader() {
  // @@protoc_insertion_point(destructor:wa.rpc.FrameworkResponseHeader)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FrameworkResponseHeader::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FrameworkResponseHeader::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FrameworkResponseHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:wa.rpc.FrameworkResponseHeader)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.responsesize_) -
      reinterpret_cast<char*>(&_impl_.code_)) + sizeof(_impl_.responsesize_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrameworkResponseHeader::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 responseSize = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.responsesize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FrameworkResponseHeader::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wa.rpc.FrameworkResponseHeader)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 code = 1;
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_code(), target);
  }

  // uint32 responseSize = 2;
  if (this->_internal_responsesize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_responsesize(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wa.rpc.FrameworkResponseHeader)
  return target;
}

size_t FrameworkResponseHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wa.rpc.FrameworkResponseHeader)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 code = 1;
  if (this->_internal_code() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_code());
  }

  // uint32 responseSize = 2;
  if (this->_internal_responsesize() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_responsesize());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FrameworkResponseHeader::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FrameworkResponseHeader::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FrameworkResponseHeader::GetClassData() const { return &_class_data_; }


void FrameworkResponseHeader::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FrameworkResponseHeader*>(&to_msg);
  auto& from = static_cast<const FrameworkResponseHeader&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:wa.rpc.FrameworkResponseHeader)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_code() != 0) {
    _this->_internal_set_code(from._internal_code());
  }
  if (from._internal_responsesize() != 0) {
    _this->_internal_set_responsesize(from._internal_responsesize());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FrameworkResponseHeader::CopyFrom(const FrameworkResponseHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wa.rpc.FrameworkResponseHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrameworkResponseHeader::IsInitialized() const {
  return true;
}

void FrameworkResponseHeader::InternalSwap(FrameworkResponseHeader* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FrameworkResponseHeader, _impl_.responsesize_)
      + sizeof(FrameworkResponseHeader::_impl_.responsesize_)
      - PROTOBUF_FIELD_OFFSET(FrameworkResponseHeader, _impl_.code_)>(
          reinterpret_cast<char*>(&_impl_.code_),
          reinterpret_cast<char*>(&other->_impl_.code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FrameworkResponseHeader::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rpc_5fframework_2eproto_getter, &descriptor_table_rpc_5fframework_2eproto_once,
      file_level_metadata_rpc_5fframework_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace rpc
}  // namespace wa
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::wa::rpc::FrameworkRequestHeader*
Arena::CreateMaybeMessage< ::wa::rpc::FrameworkRequestHeader >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wa::rpc::FrameworkRequestHeader >(arena);
}
template<> PROTOBUF_NOINLINE ::wa::rpc::FrameworkResponseHeader*
Arena::CreateMaybeMessage< ::wa::rpc::FrameworkResponseHeader >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wa::rpc::FrameworkResponseHeader >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
