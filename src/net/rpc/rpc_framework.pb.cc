// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc_framework.proto

#include "rpc_framework.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace wa {
namespace rpc {
class FrameworkRequestHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FrameworkRequestHeader> _instance;
} _FrameworkRequestHeader_default_instance_;
class FrameworkResponseHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FrameworkResponseHeader> _instance;
} _FrameworkResponseHeader_default_instance_;
}  // namespace rpc
}  // namespace wa
static void InitDefaultsFrameworkRequestHeader_rpc_5fframework_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::wa::rpc::_FrameworkRequestHeader_default_instance_;
    new (ptr) ::wa::rpc::FrameworkRequestHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::wa::rpc::FrameworkRequestHeader::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FrameworkRequestHeader_rpc_5fframework_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFrameworkRequestHeader_rpc_5fframework_2eproto}, {}};

static void InitDefaultsFrameworkResponseHeader_rpc_5fframework_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::wa::rpc::_FrameworkResponseHeader_default_instance_;
    new (ptr) ::wa::rpc::FrameworkResponseHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::wa::rpc::FrameworkResponseHeader::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FrameworkResponseHeader_rpc_5fframework_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFrameworkResponseHeader_rpc_5fframework_2eproto}, {}};

void InitDefaults_rpc_5fframework_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_FrameworkRequestHeader_rpc_5fframework_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FrameworkResponseHeader_rpc_5fframework_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_rpc_5fframework_2eproto[2];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_rpc_5fframework_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_rpc_5fframework_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_rpc_5fframework_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wa::rpc::FrameworkRequestHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::wa::rpc::FrameworkRequestHeader, servicename_),
  PROTOBUF_FIELD_OFFSET(::wa::rpc::FrameworkRequestHeader, methodname_),
  PROTOBUF_FIELD_OFFSET(::wa::rpc::FrameworkRequestHeader, argssize_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wa::rpc::FrameworkResponseHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::wa::rpc::FrameworkResponseHeader, code_),
  PROTOBUF_FIELD_OFFSET(::wa::rpc::FrameworkResponseHeader, responsesize_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::wa::rpc::FrameworkRequestHeader)},
  { 8, -1, sizeof(::wa::rpc::FrameworkResponseHeader)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::wa::rpc::_FrameworkRequestHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::wa::rpc::_FrameworkResponseHeader_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_rpc_5fframework_2eproto = {
  {}, AddDescriptors_rpc_5fframework_2eproto, "rpc_framework.proto", schemas,
  file_default_instances, TableStruct_rpc_5fframework_2eproto::offsets,
  file_level_metadata_rpc_5fframework_2eproto, 2, file_level_enum_descriptors_rpc_5fframework_2eproto, file_level_service_descriptors_rpc_5fframework_2eproto,
};

const char descriptor_table_protodef_rpc_5fframework_2eproto[] =
  "\n\023rpc_framework.proto\022\006wa.rpc\"S\n\026Framewo"
  "rkRequestHeader\022\023\n\013serviceName\030\001 \001(\014\022\022\n\n"
  "methodName\030\002 \001(\014\022\020\n\010argsSize\030\003 \001(\r\"=\n\027Fr"
  "ameworkResponseHeader\022\014\n\004code\030\001 \001(\r\022\024\n\014r"
  "esponseSize\030\002 \001(\rb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_rpc_5fframework_2eproto = {
  false, InitDefaults_rpc_5fframework_2eproto, 
  descriptor_table_protodef_rpc_5fframework_2eproto,
  "rpc_framework.proto", &assign_descriptors_table_rpc_5fframework_2eproto, 185,
};

void AddDescriptors_rpc_5fframework_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_rpc_5fframework_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_rpc_5fframework_2eproto = []() { AddDescriptors_rpc_5fframework_2eproto(); return true; }();
namespace wa {
namespace rpc {

// ===================================================================

void FrameworkRequestHeader::InitAsDefaultInstance() {
}
class FrameworkRequestHeader::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameworkRequestHeader::kServiceNameFieldNumber;
const int FrameworkRequestHeader::kMethodNameFieldNumber;
const int FrameworkRequestHeader::kArgsSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameworkRequestHeader::FrameworkRequestHeader()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:wa.rpc.FrameworkRequestHeader)
}
FrameworkRequestHeader::FrameworkRequestHeader(const FrameworkRequestHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  servicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.servicename().size() > 0) {
    servicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servicename_);
  }
  methodname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.methodname().size() > 0) {
    methodname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.methodname_);
  }
  argssize_ = from.argssize_;
  // @@protoc_insertion_point(copy_constructor:wa.rpc.FrameworkRequestHeader)
}

void FrameworkRequestHeader::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_FrameworkRequestHeader_rpc_5fframework_2eproto.base);
  servicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  methodname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  argssize_ = 0u;
}

FrameworkRequestHeader::~FrameworkRequestHeader() {
  // @@protoc_insertion_point(destructor:wa.rpc.FrameworkRequestHeader)
  SharedDtor();
}

void FrameworkRequestHeader::SharedDtor() {
  servicename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  methodname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FrameworkRequestHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FrameworkRequestHeader& FrameworkRequestHeader::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_FrameworkRequestHeader_rpc_5fframework_2eproto.base);
  return *internal_default_instance();
}


void FrameworkRequestHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:wa.rpc.FrameworkRequestHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  methodname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  argssize_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* FrameworkRequestHeader::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<FrameworkRequestHeader*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes serviceName = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_servicename();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes methodName = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_methodname();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint32 argsSize = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_argssize(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool FrameworkRequestHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:wa.rpc.FrameworkRequestHeader)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes serviceName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_servicename()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes methodName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_methodname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 argsSize = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &argssize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:wa.rpc.FrameworkRequestHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:wa.rpc.FrameworkRequestHeader)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void FrameworkRequestHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:wa.rpc.FrameworkRequestHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes serviceName = 1;
  if (this->servicename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->servicename(), output);
  }

  // bytes methodName = 2;
  if (this->methodname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->methodname(), output);
  }

  // uint32 argsSize = 3;
  if (this->argssize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->argssize(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:wa.rpc.FrameworkRequestHeader)
}

::google::protobuf::uint8* FrameworkRequestHeader::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:wa.rpc.FrameworkRequestHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes serviceName = 1;
  if (this->servicename().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->servicename(), target);
  }

  // bytes methodName = 2;
  if (this->methodname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->methodname(), target);
  }

  // uint32 argsSize = 3;
  if (this->argssize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->argssize(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wa.rpc.FrameworkRequestHeader)
  return target;
}

size_t FrameworkRequestHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wa.rpc.FrameworkRequestHeader)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes serviceName = 1;
  if (this->servicename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->servicename());
  }

  // bytes methodName = 2;
  if (this->methodname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->methodname());
  }

  // uint32 argsSize = 3;
  if (this->argssize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->argssize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrameworkRequestHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:wa.rpc.FrameworkRequestHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const FrameworkRequestHeader* source =
      ::google::protobuf::DynamicCastToGenerated<FrameworkRequestHeader>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:wa.rpc.FrameworkRequestHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:wa.rpc.FrameworkRequestHeader)
    MergeFrom(*source);
  }
}

void FrameworkRequestHeader::MergeFrom(const FrameworkRequestHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wa.rpc.FrameworkRequestHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.servicename().size() > 0) {

    servicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servicename_);
  }
  if (from.methodname().size() > 0) {

    methodname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.methodname_);
  }
  if (from.argssize() != 0) {
    set_argssize(from.argssize());
  }
}

void FrameworkRequestHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:wa.rpc.FrameworkRequestHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameworkRequestHeader::CopyFrom(const FrameworkRequestHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wa.rpc.FrameworkRequestHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrameworkRequestHeader::IsInitialized() const {
  return true;
}

void FrameworkRequestHeader::Swap(FrameworkRequestHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameworkRequestHeader::InternalSwap(FrameworkRequestHeader* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  servicename_.Swap(&other->servicename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  methodname_.Swap(&other->methodname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(argssize_, other->argssize_);
}

::google::protobuf::Metadata FrameworkRequestHeader::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_rpc_5fframework_2eproto);
  return ::file_level_metadata_rpc_5fframework_2eproto[kIndexInFileMessages];
}


// ===================================================================

void FrameworkResponseHeader::InitAsDefaultInstance() {
}
class FrameworkResponseHeader::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameworkResponseHeader::kCodeFieldNumber;
const int FrameworkResponseHeader::kResponseSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameworkResponseHeader::FrameworkResponseHeader()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:wa.rpc.FrameworkResponseHeader)
}
FrameworkResponseHeader::FrameworkResponseHeader(const FrameworkResponseHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&responsesize_) -
    reinterpret_cast<char*>(&code_)) + sizeof(responsesize_));
  // @@protoc_insertion_point(copy_constructor:wa.rpc.FrameworkResponseHeader)
}

void FrameworkResponseHeader::SharedCtor() {
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&responsesize_) -
      reinterpret_cast<char*>(&code_)) + sizeof(responsesize_));
}

FrameworkResponseHeader::~FrameworkResponseHeader() {
  // @@protoc_insertion_point(destructor:wa.rpc.FrameworkResponseHeader)
  SharedDtor();
}

void FrameworkResponseHeader::SharedDtor() {
}

void FrameworkResponseHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FrameworkResponseHeader& FrameworkResponseHeader::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_FrameworkResponseHeader_rpc_5fframework_2eproto.base);
  return *internal_default_instance();
}


void FrameworkResponseHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:wa.rpc.FrameworkResponseHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&responsesize_) -
      reinterpret_cast<char*>(&code_)) + sizeof(responsesize_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* FrameworkResponseHeader::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<FrameworkResponseHeader*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 code = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_code(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 responseSize = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_responsesize(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool FrameworkResponseHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:wa.rpc.FrameworkResponseHeader)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 responseSize = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &responsesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:wa.rpc.FrameworkResponseHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:wa.rpc.FrameworkResponseHeader)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void FrameworkResponseHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:wa.rpc.FrameworkResponseHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->code(), output);
  }

  // uint32 responseSize = 2;
  if (this->responsesize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->responsesize(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:wa.rpc.FrameworkResponseHeader)
}

::google::protobuf::uint8* FrameworkResponseHeader::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:wa.rpc.FrameworkResponseHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->code(), target);
  }

  // uint32 responseSize = 2;
  if (this->responsesize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->responsesize(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wa.rpc.FrameworkResponseHeader)
  return target;
}

size_t FrameworkResponseHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wa.rpc.FrameworkResponseHeader)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->code());
  }

  // uint32 responseSize = 2;
  if (this->responsesize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->responsesize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrameworkResponseHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:wa.rpc.FrameworkResponseHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const FrameworkResponseHeader* source =
      ::google::protobuf::DynamicCastToGenerated<FrameworkResponseHeader>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:wa.rpc.FrameworkResponseHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:wa.rpc.FrameworkResponseHeader)
    MergeFrom(*source);
  }
}

void FrameworkResponseHeader::MergeFrom(const FrameworkResponseHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wa.rpc.FrameworkResponseHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    set_code(from.code());
  }
  if (from.responsesize() != 0) {
    set_responsesize(from.responsesize());
  }
}

void FrameworkResponseHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:wa.rpc.FrameworkResponseHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameworkResponseHeader::CopyFrom(const FrameworkResponseHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wa.rpc.FrameworkResponseHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrameworkResponseHeader::IsInitialized() const {
  return true;
}

void FrameworkResponseHeader::Swap(FrameworkResponseHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameworkResponseHeader::InternalSwap(FrameworkResponseHeader* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(code_, other->code_);
  swap(responsesize_, other->responsesize_);
}

::google::protobuf::Metadata FrameworkResponseHeader::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_rpc_5fframework_2eproto);
  return ::file_level_metadata_rpc_5fframework_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace rpc
}  // namespace wa
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::wa::rpc::FrameworkRequestHeader* Arena::CreateMaybeMessage< ::wa::rpc::FrameworkRequestHeader >(Arena* arena) {
  return Arena::CreateInternal< ::wa::rpc::FrameworkRequestHeader >(arena);
}
template<> PROTOBUF_NOINLINE ::wa::rpc::FrameworkResponseHeader* Arena::CreateMaybeMessage< ::wa::rpc::FrameworkResponseHeader >(Arena* arena) {
  return Arena::CreateInternal< ::wa::rpc::FrameworkResponseHeader >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
